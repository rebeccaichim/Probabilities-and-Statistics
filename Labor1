#LAB 1
#ex1
import random
from random import sample
import math
from math import factorial, perm, comb
import itertools
from itertools import permutations, combinations

print("ex 1:")
print(perm(4,4))
print(perm(4,2))

#ex2
#a: permutarile lui ABC
print("2: a: ")
x = "ABC"
permutari= list(itertools.permutations(x))

#b: numarul de permutari de la a
print("2: b: ")
total_permutari = math.factorial(len(x))

print("Permutarile:", permutari)
print("Numarul de permutari:", total_permutari)

#c: permutare aleatorie a lui MATHE
print("2: c: ")
mathe = "MATHE"
print(random.sample(mathe,5))

#d: permutare aleatorie a lui MATHE de 3 litere
print("2: d: ")
mathe = "MATHE"
print(random.sample(mathe,3))

#e: toate permutarile de 3 litere din MATHE
print("2: e: ")
mathe = "MATHE"
permutari= list(itertools.permutations(mathe,3))
print("permutari:",permutari)

#f: numarul total de permutari de 3 litere din MATHE
print("2: f: ")
x="ABC"
print(perm(mathe.__len__(),3))

#g: toate permutarile distincte de 3 litere din MATHE
print("2: g: ")
combinari= list(itertools.combinations(mathe,3))
print(combinari)

#h: numarul total de permutari distincte de 3 litere din MATHE
print("2: h: ")
print(comb(mathe.__len__(),3))

#u3

from more_itertools import distinct_permutations
#a: toate permuarile lui AABB si nr lor
print("3: a: ")
M = list(distinct_permutations("AABB"))
print(M)
m = len(M)
print("Anzahl Permutationen von AABB mit Wiederholung:", m)

#primele 4 permutari ale lui 1112 si numarul total de permutari cu repetare
for p in distinct_permutations("1112"):
    print("".join(p))

n = perm("1112".__len__(),4)
print("Anzahl Permutationen von 1112 mit Wiederholung:", n)


#u4
print("4: ")
import itertools
from itertools import combinations_with_replacement
#combinarile de 2 litere din ABC si nr lor
print(list(combinations_with_replacement("ABC",2)))
k=list(combinations_with_replacement("ABC",2)).__len__()
print("Combinari", k)
#impartirea a 6 bile in 4 cutii
#nr total de posibilitati si afisarea lor
#toate aranjamentele incat sa incapa 6 bile in 4 cutii:('1', '1', '1', '1', '2', '3') inseamna 4 in prima, 1 in a doua si 1 in a treia
print(list(combinations_with_replacement("1234",6)).__len__())
print(list(combinations_with_replacement("1234",6)))
